version: '3.3'

services:
  weather_collector:
    build: 
      context: .
    container_name: weather_collector
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8001:8001"
    networks:
      - kafka-network

  zookeeper:
    image: 'bitnami/zookeeper:3.7.0'
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - zookeeper_net
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./bitnami/zookeeper:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:2.8.0'
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - zookeeper_net
      - kafka-network
    volumes:
      - ./bitnami/kafka:/bitnami/kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    container_name: kafdrop
    ports:
     - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka


networks:
  kafka-network:
    external: true
  zookeeper_net: